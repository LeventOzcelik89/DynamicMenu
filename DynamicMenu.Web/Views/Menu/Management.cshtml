@model DynamicMenu.Web.Model.VMMenuDetail;
@{

}

<div class="toolbar-wrapper">
    <div class="btn-toolbar" role="toolbar" aria-label="İşlem araç çubuğu">
        <div class="btn-group me-2" role="group">
            <button type="button" class="btn btn-primary" title="Ekle" data-task="add_menu" data-bs-toggle="modal" data-bs-target="#editMenuItemModal">
                <i class="fas fa-plus"></i>
                <span class="button-text">Ekle</span>
            </button>
            <button type="button" class="btn btn-primary hide" title="Sil">
                <i class="fas fa-trash-alt"></i>
                <span class="button-text">Sil</span>
            </button>
            <button type="button" class="btn btn-primary hide" title="Düzenle">
                <i class="fas fa-edit"></i>
                <span class="button-text">Düzenle</span>
            </button>
            <button type="button" class="btn btn-primary" title="İconlar" data-bs-toggle="modal" data-bs-target="#iconsModal">
                <i class="fas fa-icons"></i>
                <span class="button-text">İconlar</span>
            </button>
        </div>

        @*         <div class="btn-group me-2" role="group">
            <button type="button" class="btn btn-primary" title="Yukarı Taşı">
                <i class="fas fa-arrow-up"></i>
                <span class="button-text">Yukarı Taşı</span>
            </button>
            <button type="button" class="btn btn-primary" title="Aşağı Taşı">
                <i class="fas fa-arrow-down"></i>
                <span class="button-text">Aşağı Taşı</span>
            </button>
        </div>
 *@
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-primary" title="Kaydet" data-task="saveMenu">
                <i class="fas fa-save"></i>
                <span class="button-text">Kaydet</span>
            </button>
            <button type="button" class="btn btn-primary" title="Yeniden Yükle" onclick="location.reload();">
                <i class="fas fa-sync-alt"></i>
                <span class="button-text">Yeniden Yükle</span>
            </button>
        </div>

        <div class="btn-group" role="group">
            <button type="button" class="btn btn-success" title="TR" data-task="lang" data-val="tr">
                <span class="button-text">TR</span>
            </button>
            <button type="button" class="btn btn-primary" title="TR" data-task="lang" data-val="en">
                <span class="button-text">EN</span>
            </button>
        </div>

    </div>
</div>

<div class="mobilContainer">

    <div id="mobilApp" class="mobilApp"></div>

</div>

@section Styles {

    <link rel="stylesheet" href="~/css/style.css">
    <link href="~/css/toolbar.css" rel="stylesheet">

    <style type="text/css">
        .modal .modal-footer {
            display: unset;
        }

        .modal .modal-body {
            padding: 15px;
        }

        header h1 {
            margin-block-start: 0px;
            margin-block-end: 0px;
            color: #ffffff;
        }

    </style>

}

<!-- Edit Menu Item Modal -->
<div class="modal modal-lg fade" id="editMenuItemModal" tabindex="-1" aria-labelledby="editMenuItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMenuItemModalLabel">Menü Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <form id="editMenuItemForm">

                    <input type="hidden" id="Id" />
                    <input type="hidden" id="Pid" />
                    <input type="hidden" id="SortOrder" />
                    <input type="hidden" id="ProcessType" />

                    @* @Html.DropDown("MenuGroupId", "Menü Group ID", "/MenuGroup/GetAll", null, "Lütfen Menü Group ID seçin") *@
                    @* @Html.DropDown("MenuId", "Menü ID", "/Menu/GetAll", null, "Lütfen Menü ID seçin") *@
                    @Html.DropDown("MenuBaseItemId", "Menü Base Item ID", "/MenuBaseItem/GetAll", null, "Lütfen Menü Base Item ID seçin", null, "item.Text + ' | ' + item.TextEn")

                    <div class="mb-3">
                        <label for="Keyword" class="form-label">Keyword</label>
                        @Html.TextBox("Keyword", null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
                        <div class="invalid-feedback">Boş bırakılamaz</div>
                    </div>

                    <div class="form-check">
                        <label for="IsNew" class="form-check-label">IsNew</label>
                        @Html.CheckBox("IsNew", new Dictionary<string, object> { { "class", "form-check-input" } })
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="saveMenuItem">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Icons Modal -->
<div class="modal modal-xl fade" id="iconsModal" tabindex="-1" aria-labelledby="iconsModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="iconsModal">İconlar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                    <button type="button" class="btn btn-primary" id="saveMenuItem">Kaydet</button>
                </div> *@
        </div>
    </div>
</div>

<div class="modal modal-lg fade" id="deleteConfirmModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <input type="hidden" name="id" />

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="deleteConfirmModalLabel">Silmeyi Onayla</h4>
            </div>

            <div class="modal-body">
                <p>Seçili menu item'ı silmek istediğinizden emin misiniz?</p>
                <p>Devam etmek istiyor musunuz?</p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-bs-dismiss="modal">Vazgeç</button>
                <a class="btn btn-danger btn-ok" id="removeMenuItem" data-bs-dismiss="modal">Sil</a>
            </div>
        </div>
    </div>
</div>

<script type="text/template" id="menuTemplate">
    <div class="page" data-page="{{data.Id}}">
        <header>
            <button class="back-button" data-page="{{data.Pid}}">
                <i class="fas fa-arrow-left"></i>
            </button>
            <h1 data-lang="tr">{{data.MenuBaseItem.Text}}</h1>
            <h1 data-lang="en">{{data.MenuBaseItem.TextEn}}</h1>
        </header>
        <main>
            <div class="menu-container" data-target="menuItems">

            </div>
        </main>
    </div>
</script>

<script type="text/template" id="menuItemTemplate">
            <div class="menu-item" data-page="{{data.Id}}">
    @* <img src="{{icon}}" onerror="imgError(this)"> *@
                <img data-target="icon" src="{{data.MenuBaseItem.IconUrl}}" />
                <span data-lang="tr" data-target="text">{{data.MenuBaseItem.Text}}</span>
                <span data-lang="en" data-target="textEn">{{data.MenuBaseItem.TextEn}}</span>
                <span data-target="IsNew" class="new">Yeni</span>
                <i class="fas fa-chevron-right" data-target="go"></i>

                <div class="btns btn-group">
    @*                 <button type="button" class="btn btn-primary" title="Ekle">
                    <i class="fas fa-plus"></i>
                </button> *@

                    <button data-task="edit_menu" type="button" class="btn btn-primary" title="Düzenle" data-bs-toggle="modal" data-bs-target="#editMenuItemModal">
                        <i class="fas fa-pen"></i>
                    </button>

                    <button data-task="remove_menu" type="button" class="btn btn-danger" title="Sil" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal">
                         <i class="fas fa-trash-alt"></i>
                    </button>

    @*                 <button type="button" class="btn btn-primary" title="Sil">
                    <i class="fas fa-trash-alt"></i>
                </button> *@
                </div>
            </div>
</script>

@section Scripts {

    <script type="text/javascript">

        function imgError(e){
            e.style.opacity = '0';
        }

        var page = {
            data: null,
            icons: null,
            menuBaseItems: null,
            defines: {
                baseUrl: '@Html.Raw(appSettings.baseUrl)',
                model: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)),
                lang: 'tr',
            },
            enums: {
                processType: {
                    'add': 1,
                    'edit': 2,
                    'remove': 3
                }
            },
            saveData: function(){
                var res = [];
                $.each(page.dataList, function(k,item){
                    res.push({
                        processType: item.processType,
                        menuItem: item.menuItem
                    });
                });

                ReadData('/Menu/Save', { menuId: page.defines.model.MenuId, menuGroupId: page.defines.model.MenuGroupId, items: res }, function(ress){
                    console.log(ress);
                });

            },
            getData: function(id){

                var gRes;

                $.each(page.data, function(d,data){

                    if(data.Id == id){
                        gRes = data;
                        return false;
                    }

                    //  var res = data.filter(function(im){ return im.id == id })[0];

                    //  if(res != undefined){
                    //      gRes = res;
                    //      return false;
                    //  }

                    if(data.items != null){
                        gRes = page.searchData(data.items, id);
                        if(gRes != undefined){
                            return false;
                        }
                    }

                });

                return gRes;

            },
            searchData: function(list, id){

                var res = list.filter(function(item){ return item.Id == id })[0];
                if(res != undefined){
                    return res;
                }

                $.each(list, function(i,item){
                    if(item.items?.length > 0){
                        res = page.searchData(item.items, id);

                        if(res != undefined){
                            return false;
                        }

                    }
                });

                return res;

            },
            dataList: {},
            menuContainerElem: $('#mobilApp'),
            getElem_PageList: function(item){

                var menuTemplate = TemplateEngine.Render($('#menuTemplate'), item);
                menuTemplate.data('data', item);

                if(item.isBase == true){
                    menuTemplate.find('.back-button').remove();
                }

                $.each(item.items, function(j, subitem){

                    subitem.MenuBaseItem.IconUrl = (page.defines.baseUrl + 'img/icons/' + subitem.MenuBaseItem.IconPath + '.svg');
                    var menuItemTemplate = TemplateEngine.Render($('#menuItemTemplate'), subitem);

                    if(subitem.items == null || subitem.items.length == 0){
                        menuItemTemplate.find('[data-target="go"]').remove();
                    }

                    if(subitem.IsNew !== true){
                        menuItemTemplate.find('[data-target="IsNew"]').hide();
                    }

                    menuTemplate.find('[data-target="menuItems"]').append(menuItemTemplate);
                    menuTemplate.find('[data-lang]').hide();
                    menuTemplate.find('[data-lang="' + page.defines.lang + '"]').show();

                    subitem.render = function(){

                        var data = menuItemTemplate.data('data');
                        if(data == null){
                            return;
                        }
                        //  todo: Burası formData update edildiğinde çalışacak bölüm.
                        menuItemTemplate.find('[data-target="text"]').html(data.MenuBaseItem.Text);
                        menuItemTemplate.find('[data-target="textEn"]').html(data.MenuBaseItem.TextEn);
                        menuItemTemplate.find('[data-target="icon"]').attr('src', subitem.MenuBaseItem.IconUrl);
                        if(data.IsNew == true){
                            menuItemTemplate.find('[data-target="IsNew"]').show();
                        }else{
                            menuItemTemplate.find('[data-target="IsNew"]').hide();
                        }

                    };

                    menuItemTemplate.data('data', subitem);

                });

                return $(menuTemplate);

            },
            makeSubMenu: function(item, skipChilds){

                page.menuContainerElem.append(page.getElem_PageList(item));

                $.each(item.items, function(ix,  itemx){

                    if(itemx.items != null && itemx.items.length > 0 && skipChilds != true){
                        page.makeSubMenu(itemx);
                    }

                });

            },
            makeSortable: function(){

                $('.page .menu-container:not(.ui-sortable)').sortable({
                        axis: "y",
                        cursor: "move",
                        // activate: function( event, ui ) { console.log('activate'); },
                        // beforeStop: function( event, ui ) { console.log('beforeStop'); },
                        // change: function( event, ui ) { console.log('change'); },
                        // out: function( event, ui ) { console.log('out'); },
                        // receive: function( event, ui ) { console.log('receive'); },
                        // sort: function( event, ui ) { console.log('sort'); },
                        // start: function( event, ui ) { console.log('start'); },
                        // stop: function( event, ui ) { console.log('stop'); },
                        update: function( event, ui ) {
                            var elemData = ui.item.data('data');
                            var parentData = page.getData(elemData.Pid);
                            var elems = $('#mobilApp .page[data-page="' + (parentData?.Id ?? 0) + '"] .menu-container .menu-item');

                            $.each(elems, function(e,elem){

                                var data = $(elem).data('data');
                                data.SortOrder = e + 1;

                                page.dataList[data.Id] = { menuItem: data, processType: page.enums.processType.edit };


                            });

                        }

                    });

            },
            ready: function () {

                ReadData('/MenuItem/GetMenuItemsByMenuUpdate', { menuGroupId: page.defines.model.MenuGroupId, menuId: page.defines.model.MenuId }, function (res) {

                    page.data = res;
                    page.menuContainerElem.append(page.getElem_PageList({ isBase: true, Id: '0', MenuBaseItem: {Text: 'Menü Detayı', TextEn: 'Menu Detail' }, items: page.data }));
                    //  page.menuContainerElem.append(page.getElem_PageList({ id: 'cards', text: 'Kart Menü', textEn: 'Cards', items: page.data.cards }));
                    //  page.menuContainerElem.append(page.getElem_PageList({ id: 'profile', text: 'Profil', textEn: 'Profile', items: page.data.profile }));
                    //  page.menuContainerElem.append(page.getElem_PageList({ id: 'applications', text: 'Başvurular', textEn: 'Applications', items: page.data.applications }));

                    $.each(page.data, function(i, item){
                        if(item.items != null && item.items.length > 0){
                            page.makeSubMenu(item);
                        }
                    });

                    $('.page').hide();
                    $('.page[data-page="0"]').show();
                    page.makeSortable();

                });

                ReadData('/MenuBaseItem/GetIcons', null, function (items) {

                    page.icons = items;

                    $.each(page.icons, function(i,item){
                        $('#iconsModal .modal-body').append($('<img data-name="' + item + '" src="' + page.defines.baseUrl + '/img/icons/' + item + '.svg" />'));
                    });

                });

                ReadData('/MenuBaseItem/GetAll', null, function(items){

                    page.menuBaseItems = items;

                })

            },
            getId: function(){
                return Math.round(Math.random() * 100000) + 100000;
            },
            showMenu: function (item) {


            },
            backMenu: function (item) {

            }
        }

        $(document)

            .ready(function () {

                page.ready();

            })

            .on('click', '.mobilContainer .bottom-nav [data-menu]', function(e){

                e.preventDefault();

                var menu = $(this).attr('data-menu');
                $('.page[data-page]').hide();
                $('.page[data-page="' + menu + '"]').show();

                $('.mobilContainer .bottom-nav .nav-item').removeClass('active');
                $(this).addClass('active');

                return false;

            })

            .on('click', '#removeMenuItem', function(e){

                e.preventDefault();

                var data = $('#deleteConfirmModal').data('data');

                page.dataList[data.Id] = { menuItem: data, processType: page.enums.processType.remove };
                $('.menu-item[data-page="' + data.Id + '"]').remove();

                var pData = $('#mobilApp .page:visible').data('data');
                pData.items = pData.items.filter(function(a){ return a.Id != data.Id });

                return false;

            })

            .on('click', '#saveMenuItem', function(e){

                e.preventDefault();

                var formData = {
                    Id: isNaN(parseInt($('#Id').val())) ? null : parseInt($('#Id').val()),
                    IsNew: $('#IsNew').prop('checked'),
                    Keyword: $('#Keyword').val(),
                    Pid: isNaN(parseInt($('#Pid').val())) ? null : parseInt($('#Pid').val()),
                    SortOrder: parseInt($('#SortOrder').val()),
                    items: null,

                    processType: parseInt($('#ProcessType').val())
                };

                var menuBaseItemId = parseInt($('#MenuBaseItemId').val());
                var menuBaseItem = page.menuBaseItems.filter(function(item){ return item.Id == menuBaseItemId; })[0];

                formData.MenuBaseItem = {
                    Id: menuBaseItem.Id,
                    IconPath: menuBaseItem.IconPath,
                    Text: menuBaseItem.Text,
                    TextEn: menuBaseItem.TextEn
                };

                if(formData.processType == page.enums.processType.edit){
                    var pageData = page.getData(formData.Id);
                    pageData.Keyword = formData.Keyword;
                    pageData.IsNew = formData.IsNew;
                    pageData.MenuBaseItem.Id =  formData.MenuBaseItem.Id;
                    pageData.render();

                    page.dataList[pageData.Id] = { menuItem: pageData, processType: page.enums.processType.edit };

                }else if(formData.processType == page.enums.processType.add){

                    formData.Id = page.getId();
                    if(formData.Pid == 0){
                        formData.Pid = null;
                    }

                    var data = $('#mobilApp .page:visible').data('data')

                    $('.page[data-page="' + data.Id + '"]').remove();
                    data.items.push(formData);
                    page.makeSubMenu(data, true);

                    page.dataList[formData.Id] = { menuItem: formData, processType: page.enums.processType.add };

                }

                //  $('#editMenuItemModal').modal('hide');
                page.makeSortable();

                return false;

            })

            .on('click', '#iconsModal .modal-body > img', function(e){

                e.preventDefault();

                var val = $(this).attr('data-name');
                $('#editMenuItemModal [data-task="iconDisplay"]').attr('src', (page.defines.baseUrl + 'img/icons/' + val + '.svg'));
                $('#editMenuItemModal #icon').val(val);
                $('#iconsModal').modal('hide');

                return false;

            })

            .on('click', '[data-task="iconSearch"]', function(e){

                e.preventDefault();

                $('#iconsModal').modal('show');

                return false;

            })

            .on('click', '[data-task="edit_menu"]', function(e){

                e.preventDefault();

                var data = $($(this).parents('.menu-item')[0]).data('data');
                $('#ProcessType').val(page.enums.processType.edit);
                $('#SortOrder').val(data.SortOrder ?? '');
                $('#Pid').val(data.Pid ?? '');
                $('#Keyword').val(data.Keyword || '');
                //  $('[data-task="iconDisplay"]').attr('src', (page.defines.baseUrl + 'img/icons/' + data.icon + '.svg'));
                $('#IsNew').prop('checked', data.IsNew || false);
                $('#Id').val(data.Id);
                $('#MenuBaseItemId').val(data.MenuBaseItem.Id);

                //  $('#editMenuItemModal').modal('show');

                return false;

            })

            .on('click', '[data-task="add_menu"]', function(e){

                e.preventDefault();

                var data = $('#mobilApp .page:visible').data('data');

                $('#Pid').val(data.Id || '');
                $('#SortOrder').val(data.items.length + 1 || '');
                $('#ProcessType').val(page.enums.processType.add);

                $('#Keyword').val('');
                //  $('[data-task="iconDisplay"]').attr('src', 'img/icons/' + data.icon + '.svg');
                $('#IsNew').prop('checked', false);
                $('#Id').val('');

                return false;

            })

            .on('click', '[data-task="remove_menu"]', function(e){

                e.preventDefault();

                var data = $($(this).parents('.menu-item')[0]).data('data');
                $('#deleteConfirmModal').find('input[name="Id"]').val(data.Id);
                $('#deleteConfirmModal').data('data', data);
                //  $('#deleteConfirmModal').modal('show');

                return false;

            })

            .on('click', '[data-task="saveMenu"]', function(e){

                e.preventDefault();

                page.saveData();

                return false;

            })

            .on('click', '[data-task="lang"]', function(e){

                e.preventDefault();

                page.defines.lang = $(this).attr('data-val');
                $('[data-lang]').hide();
                $('[data-lang="' + page.defines.lang + '"]').show();

                $('[data-task="lang"]').removeClass('btn-success').addClass('btn-primary');
                $(this).removeClass('btn-primary').addClass('btn-success');

                return false;

            })

            .on('click', '.menu-item', function (e) {

                e.preventDefault();

                var page = $('.page[data-page="' + $(this).attr('data-page') + '"]');
                if(page.length > 0){
                    $('.page').hide();
                    page.show();
                }

                return false;

            })

            .on('click', '.back-button', function (e) {

                e.preventDefault();

                $('.page').hide();
                $('.page[data-page="' + $(this).attr('data-page') + '"]').show();

                return false;

            })

            ;

    </script>

}


