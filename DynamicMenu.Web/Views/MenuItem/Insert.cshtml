@inject DynamicMenu.Core.Models.AppSettings appSettings
@model DynamicMenu.API.DTOs.CreateMenuItemDto
@{
    ViewBag.Title = "Menu Item Insert";
}

<div class="form-container">
    <form id="customForm" data-formType="ajax" method="post" action="/MenuItem/Insert" class="needs-validation" novalidate>

        <div class="mb-3">
            <label for="Text" class="form-label">Menu Id</label>
            @Html.TextBoxFor(a => a.MenuId, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
            <div class="invalid-feedback">Boş bırakılamaz</div>
        </div>

        <div class="mb-3">
            <label for="Text" class="form-label">Menu Group Id</label>
            @Html.TextBoxFor(a => a.MenuGroupId, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
            <div class="invalid-feedback">Boş bırakılamaz</div>
        </div>

        <div class="mb-3">
            <label for="Text" class="form-label">Menu Base Item Id</label>
            @Html.TextBoxFor(a => a.MenuBaseItemId, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
            <div class="invalid-feedback">Boş bırakılamaz</div>
        </div>

        @* public required string Keyword { get; set; }
        public int? Pid { get; set; }
        public bool IsNew { get; set; }
        public int SortOrder { get; set; } *@

        <div class="mb-3">
            <label for="Keyword" class="form-label">Keyword</label>
            @Html.TextBoxFor(a => a.Keyword, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
            <div class="invalid-feedback">Boş bırakılamaz</div>
        </div>

        <div class="mb-3">
            <label for="Keyword" class="form-label">Pid</label>
            @Html.TextBoxFor(a => a.Pid, null, new Dictionary<string, object> { { "class", "form-control" } })
        </div>

        <div class="mb-3 form-check">
            <label for="IsNew" class="form-check-label">IsNew</label>
            @Html.CheckBoxFor(a => a.IsNew, new Dictionary<string, object> { { "class", "form-check-input" } })
        </div>

        @Html.DropDownListFor()

        @* <div class="mb-3">
            <label for="TextEn" class="form-label">Text En</label>
            @Html.TextBoxFor(a => a.TextEn, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
            <div class="invalid-feedback">Boş bırakılamaz</div>
        </div>

        <div class="mb-3">
            <label for="IconPath" class="form-label">Icon Path</label>
            <div class="input-group">
                @Html.TextBoxFor(a => a.IconPath, null, new Dictionary<string, object> { { "class", "form-control" }, { "required", "required" } })
                <span class="input-group-text">
                    <img data-task="iconDisplay" class="iconDisplay" src="/img/icons/Uygulama_Turu.svg" />
                </span>
                <span class="input-group-text">
                    <a href="#" data-task="iconSearch" class="iconSearch btn btn-sm" onclick="GetMenuIcons()"><i class="fa fa-search"></i> </a>
                </span>
                <div class="invalid-feedback">Boş bırakılamaz</div>
            </div>
        </div> *@

        <div class="d-flex justify-content-end">
            <button class="btn btn-secondary">Vazgeç</button>
            <button type="submit" class="btn btn-primary">Kaydet</button>
        </div>

    </form>
</div>

<script type="text/javascript">

    var baseUrl = '@Html.Raw(appSettings.baseUrl)';

    function GetMenuIcons(e){

        Kendo_GetRequest('/MenuBaseItem/MenuIcons');

    }

    $(document)

        .on('click', '#icons > img', function(e){

            e.preventDefault();

            var val = $(this).attr('data-name');
            $('[data-task="iconDisplay"]').attr('src', (baseUrl + 'img/icons/' + val + '.svg'));
            $('#IconPath').val(val);
            $('#icons').parents('.modal').find('.bootbox-close-button').trigger('click');

            return false;

        })

        ;

</script>